# Simple-call HOW-TO
# 
# Date: 30/5/2019
#


# 1) BASIC UA-TO-UA CONFIGURATION

# NOTE:
# In the following, it is supposed that all commands are executed from the 'mjUA' or 'mjSIP' folder.
# On Windows, in case of mjSIP folder is used, the 'ua' command becomes 'run\ua'.
# On Linux,  the 'ua' command must be replaced by ./ua.sh from 'mjUA' folder, or ./run/ua.sh from 'mjSIP' folder.
# Alternatively, i place of the 'ua' script you can use the following command:
java -cp lib/mjua.jar org.mjsip.ua.UA

# To establish a call between two UAs using two default configuration files 'config/a.cfg' and 'config/b.cfg':
ua -f config/a.cfg
ua -f config/b.cfg

# If you run both UAs on the same host (PC) probably you may want activate the audio capture and speakers separately on the two UAs; you can use:
ua -f config/a.cfg --send-only
ua -f config/b.cfg --recv-only

# or only on a the first UA and let the second UA to replay back the incoming RTP flow:
ua -f config/a.cfg
ua -f config/b.cfg --loopback

# or without GUI:
ua -f config/a.cfg --no-gui --send-only
ua -f config/b.cfg --no-gui --recv-only

# Note that '--send-only' and '--recv-only' refer only to the direction of the media traffic (not the caller and callee).
# The same result can be achieved also by setting the proper parameters ('send_only', 'recv_only', and 'loopback') in the two configuration files.



# 2) AUTOMATIC CALL AND AUTOMATIC ACCET

# You can also specify that an UA (A) (caller) has to call a given UA (B) (callee); moreover you can set the callee to automatically respond to the call (e.g. after 0 seconds):
ua -f config/b.cfg --recv-only -y 0
ua -f config/a.cfg --send-only -c 127.0.0.1:5080

# The same result can be achieved by setting respectively the parameters 'call_to' and 'accept_time' in the configuration files.
# Note that in case of automatic call, it is preferred to run the callee before running the caller.



# 3) UA-TO-PROXY REGISTRATION

# By properly setting-up the two UAs you can let the UAs register with a proxy and route the call through it.
# Similar result can be achieved by using only command-line options. The following commands make alice's UA to call bob's UA through a SIP proxy where both alice and bob register their AOR (address-of-record):
ua -p 5080 -m 4080 -r bob@127.0.0.2 --recv-only
ua -p 5070 -m 4070 -r alice@127.0.0.2 --send-only -c bob@127.0.0.2



# 4) MORE OPTIONS

# use -h in order to view all command-line options:
ua -h

